version: '3'

services:
  frontend:
    build: ./frontend
    restart: always
    ports:
      - '3000:3000'
    # Mapping for containers, not for Images!
    volumes:
      - /app/node_modules # but preserve node_modules folder from original image
      - ./frontend:/app # Use local machine's src for hot-reloading during development, path relative to docker-compose.yml
  api:
    build: ./api
    restart: always
    ports:
      - '5555:5000'
    depends_on:
      - mysql # wait until mysql service starts, and only then start api service
    # Mapping for containers, not for Images!
    volumes:
      - /app/node_modules # but preserve node_modules folder from original image
      - ./api:/app # Use local machine's src for hot-reloading during development, path relative to docker-compose.yml
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PORT: '3306'
      MYSQL_PASSWORD: password
      MYSQL_DB: time_db
  mysql:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: time_db
    volumes:
      - mysql_data:/var/lib/mysql # preserve MySQL data in Docker engine
      # note, that if the path would start from dot (.mysql_data), it would mean path on local machine (vs Docker engine)
  adminer:
    image: adminer
    restart: always
    ports:
      - '8888:8080'

volumes:
  mysql_data:
